{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/componentes/detalle-estudio/detalle-estudio.component.ts","webpack:///src/app/componentes/detalle-estudio/detalle-estudio.component.html","webpack:///src/app/componentes/header/header.component.ts","webpack:///src/app/componentes/header/header.component.html","webpack:///src/app/componentes/lista-estudios/lista-estudios.component.ts","webpack:///src/app/componentes/lista-estudios/lista-estudios.component.html","webpack:///src/app/componentes/menu/menu.component.ts","webpack:///src/app/componentes/menu/menu.component.html","webpack:///src/app/componentes/nuevo-estudio/nuevo-estudio.component.ts","webpack:///src/app/componentes/nuevo-estudio/nuevo-estudio.component.html","webpack:///src/app/global/globals.ts","webpack:///src/app/pipes/resultToString.ts","webpack:///src/app/servicios/estudio.service.ts","webpack:///src/app/servicios/http-client.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","StudyDetailComponent","routerService","studyService","detailStudy","cancel","study","navigate","HeaderComponent","StudyListComponent","_snackBar","displayedColumns","filters","countryFilters","resultFilters","selectedCountryFilter","selectedResultFilter","loading","getStudies","getStats","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","resultFilterArray","forEach","element","index","adaptedFilter","key","values","clean","selectedFilterValue","adaptResultFilter","length","snackBarRef","open","getFilteredStudies","subscribe","data","studies","setDatatable","err","console","log","stats","result","sort","MenuComponent","changeDetectorRef","media","fillerNav","name","route","icon","shouldRun","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","NewStudyComponent","dnaAllowed","newStudyForm","required","country","dna","Array","from","controls","includes","toUpperCase","patchValue","replaceAll","dnaArray","valida","split","validateDna","insertStudy","newStudyClick","dnaTextChanged","Globals","UsuarioLogueado","API_ENDPOINT","GET_POST_STUDY","GET_SEARCH_STUDY","GET_STATS","ResultToStringPipe","resultado","respuesta","colorClass","retorno","StudyService","http","body","post","pipe","anyData","get","url","replace","providedIn","CustomHttpClient","_router","headers","needsAuthorization","append","customHeaders","prop","Headers","createAuthorizationHeader","addCustomHeaders","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudyListComponent } from './componentes/lista-estudios/lista-estudios.component';\nimport { NewStudyComponent } from './componentes/nuevo-estudio/nuevo-estudio.component';\nimport { StudyDetailComponent } from './componentes/detalle-estudio/detalle-estudio.component';\n\n\nconst routes: Routes = [\n  { path: 'lista-analisis', \n  component: StudyListComponent },\n  { path: 'nuevo-analisis', \n  component: NewStudyComponent },\n  { path: 'detalle-analisis', \n  component: StudyDetailComponent }\n    \n    \n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MeliCovid';\n}\n","<div fxLayout=\"column\" fxFlexFill>\n    \n        <app-menu></app-menu>\n    \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CustomHttpClient } from './servicios/http-client.service';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ResultToStringPipe } from './pipes/resultToString';\n\n//Componentes\nimport { HeaderComponent } from './componentes/header/header.component';\nimport { MenuComponent } from './componentes/menu/menu.component';\n\n\n//Angular Material\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { StudyListComponent } from './componentes/lista-estudios/lista-estudios.component';\nimport { NewStudyComponent } from './componentes/nuevo-estudio/nuevo-estudio.component';\nimport { StudyDetailComponent } from './componentes/detalle-estudio/detalle-estudio.component';\n\n\n\n\n\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    ResultToStringPipe,\n    AppComponent,\n    HeaderComponent,\n    MenuComponent,\n    StudyListComponent,\n    NewStudyComponent,\n    StudyDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatTableModule,\n    MatInputModule,\n    MatPaginatorModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatCardModule,\n    MatFormFieldModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    HttpClientModule\n  ],\n  providers: [CustomHttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router,Route } from '@angular/router';\nimport { StudyService } from 'src/app/servicios/estudio.service';\n\n\n@Component({\n  selector: 'app-detalle-estudio',\n  templateUrl: './detalle-estudio.component.html',\n  styleUrls: ['./detalle-estudio.component.css']\n})\nexport class StudyDetailComponent implements OnInit {\n\n  public study;\n  constructor( private routerService: Router,private studyService: StudyService) { }\n\n  ngOnInit(): void {\n    if(!StudyService.detailStudy){\n      this.cancel()    \n    }\n    else{\n      this.study = StudyService.detailStudy;\n    }\n  }\n  cancel(){\n    this.routerService.navigate([\"/lista-analisis\"]);\n\n   }\n   \n}\n","<mat-card class=\"w-50\">\n    <mat-card-title>Detalle Análisis</mat-card-title>\n    <mat-card-content>\n        <table class=\"w-50\">\n            <tr>\n                <td>ID:</td>\n                <td>{{study._id}}</td>\n            </tr>\n            <tr>\n                <td>Nombre:</td>\n                <td>{{study.name}}</td>\n            </tr>\n            <tr>\n                <td>País:</td>\n                <td>{{study.country}}</td>\n            </tr>\n            <tr>\n                <td>Resultado:</td>\n                <td ><span [outerHTML]=\"study.result | resultToStringPipe\"></span></td>\n            </tr>\n            <tr>\n                <td style=\"float: left;\">ADN:</td>\n                <td>\n                    <ng-container *ngFor=\"let dnaElement of study.dna\">\n                        <div>\n                            {{dnaElement}}\n                        </div>\n                    </ng-container>\n                </td>\n            </tr>\n            <tr>\n                <button type=\"submit\" mat-raised-button (click)=\"cancel()\" >\n                    Volver\n                </button>\n            </tr>\n        </table>\n        \n            \n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" role=\"heading\" style=\"min-height: 50px; height: 50px;\">\n    <mat-toolbar-row>\n      <span>Meli covid</span>\n    </mat-toolbar-row>\n    \n  </mat-toolbar>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { estudioInterface } from 'src/app/modelos/estudio.interface';\nimport { statsInterface } from 'src/app/modelos/stats.interface';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\nimport { StudyService } from 'src/app/servicios/estudio.service';\nimport { Router } from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\n\n  \n  export interface EstudioData {\n    name: string;\n    country: string;\n    result: boolean;\n  }\n  \n  \n  @Component({\n    selector: 'app-lista-estudios',\n    templateUrl: './lista-estudios.component.html',\n    styleUrls: ['./lista-estudios.component.css']\n  })\n  export class StudyListComponent implements OnInit {\n  \n    displayedColumns: string[] = ['Nombre', 'Pais', 'Resultado', 'Detalle'];\n    dataSource: MatTableDataSource<estudioInterface>;\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n  \n    public studies: estudioInterface[];\n    public loading: boolean;\n    public stats: statsInterface;\n    filters: string[] = ['Pais', 'Resultado','Ninguno'];\n    selectedFilterValue : any;\n    countryFilters: string[] = ['Argentina', 'Brasil','Chile','Uruguay'];\n    resultFilters: string[] = ['Sano', 'Infectado','Inmune'];\n\n    \n    selectedCountryFilter = new FormControl();\n    selectedResultFilter = new FormControl();\n\n    constructor(\n      private studyService: StudyService,\n      private routerService: Router,\n      private _snackBar: MatSnackBar\n    ) {\n    }\n  \n    ngOnInit() {\n      this.loading = true;\n      this.getStudies();\n      this.getStats();\n      StudyService.detailStudy = null;\n\n    }\n  \n    applyFilter(event: Event) {\n      const filterValue = (event.target as HTMLInputElement).value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n  \n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n  \n    adaptResultFilter(resultFilterArray){\n\n      if(resultFilterArray){\n        resultFilterArray.forEach((element,index) => {\n          var adaptedFilter = -1;\n          switch(element){\n            case \"Sano\":\n              adaptedFilter = 0;\n              break;\n            case \"Infectado\":\n              adaptedFilter = 1;\n              break;\n            case \"Inmune\":\n              adaptedFilter = 2;\n              break;\n          }\n          resultFilterArray[index] = adaptedFilter;\n        \n        });\n      }\n      else{\n        return [];\n      }\n      \n      return resultFilterArray;\n    }\n\n    detailPage(study){\n      StudyService.detailStudy = study\n      this.routerService.navigate(['/detalle-analisis']);\n    }\n    filterStudies(){\n      var key = \"\";\n      var values = []; \n      var clean = false;\n      switch(this.selectedFilterValue){\n        case \"Pais\":\n          key = \"country\";\n          values = this.selectedCountryFilter.value;\n          break;\n        case \"Resultado\":\n          key = \"result\";\n          values = this.adaptResultFilter(this.selectedResultFilter.value);\n\n          break;\n        case \"Ninguno\":\n          clean = true;\n          break;\n      }\n\n      \n      if(clean){\n        this.getStudies();\n      }\n      else{\n        if(!values || values.length == 0 ){\n          let snackBarRef = this._snackBar.open('Selecciona un criterio de filtro',\"Ok\");\n\n        }\n        else{\n          this.loading = true;\n          this.studyService.getFilteredStudies(key,values).subscribe(\n            data => {\n              this.studies = data;\n              this.setDatatable();\n              this.loading = false;\n            },\n            err => {\n              console.log(err);\n              let snackBarRef = this._snackBar.open('Ups, ocurrio un error filtrando estudios',\"Ok\");\n              this.loading = false;\n  \n            }\n          )\n        }\n        \n      }\n      \n    }\n    getStats(){\n      this.studyService.getStats().subscribe(\n        data => {\n          this.stats = data;\n          this.setDatatable();\n        },\n        err => {\n          console.log(err);\n          \n        }\n      )\n    }\n    getStudies(){\n      this.studyService.getStudies().subscribe(\n        data => {\n          this.studies = data;\n          this.setDatatable();\n          this.loading = false;\n        },\n        err => {\n          console.log(err);\n          let snackBarRef = this._snackBar.open('Ups, ocurrio un error loading estudios',\"Ok\");\n\n          this.loading = false;\n        }\n      )\n    }\n    newAnalysis(){\n      this.routerService.navigate(['/nuevo-analisis']);\n    }\n    getColor(result){\n      switch(result){\n        case 0:\n            return \"green\";\n        case 1:\n          return \"green\";\n        case 2:\n          return \"green\";\n      };\n    }\n  \n    setDatatable(){\n      this.dataSource = new MatTableDataSource(this.studies);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }\n  \n    \n\n  }\n  ","\n\n\n\n<div class=\"w-50 marginTop1 marginBottom5\">\n  <div class=\"displayFlex marginBottom5\">\n    <mat-card class=\"cardStyle greenColor\">\n      <div class=\"displayGrid\">\n        <span>Sanos</span>\n        <span>{{stats?.healthy}}</span>\n      </div>\n    </mat-card>\n    <mat-card class=\"cardStyle redColor\">\n      <div class=\"displayGrid\">\n        <span>Infectados</span>\n        <span>{{stats?.infected}}</span>\n      </div>\n    </mat-card>\n    <mat-card class=\"cardStyle blueColor\">\n      <div class=\"displayGrid\">\n        <span>Inmunes</span>\n        <span>{{stats?.immune}}</span>\n      </div>\n    </mat-card>\n  \n  </div>\n    <ng-container *ngIf=\"!this.loading\">\n\n\n     \n\n        <section class=\"filter-section marginBottom5\">\n          <mat-card>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Filtrar por</mat-label>\n              <mat-select [(ngModel)]=\"selectedFilterValue\" >\n                <mat-option *ngFor=\"let filter of filters\" [value]=\"filter\">{{filter}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\" *ngIf=\"selectedFilterValue == 'Pais'\">\n              <mat-label>Selecciona el pais</mat-label>\n              <mat-select [formControl]=\"selectedCountryFilter\" multiple >\n  \n                <mat-select-trigger>\n                  {{selectedCountryFilter.value ? selectedCountryFilter.value[0] : ''}}\n                  <span *ngIf=\"selectedCountryFilter.value?.length > 1\" class=\"example-additional-selection\">\n                    (+{{selectedCountryFilter.value.length - 1}} {{selectedCountryFilter.value?.length === 2 ? 'otro' : 'otros'}})\n                  </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let countryFilter of countryFilters\" [value]=\"countryFilter\">{{countryFilter}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n  \n            <mat-form-field appearance=\"fill\" *ngIf=\"selectedFilterValue == 'Resultado'\">\n              <mat-label>Selecciona el resultado</mat-label>\n              <mat-select [formControl]=\"selectedResultFilter\" multiple >\n  \n                <mat-select-trigger>\n                  {{selectedResultFilter.value ? selectedResultFilter.value[0] : ''}}\n                  <span *ngIf=\"selectedResultFilter.value?.length > 1\" class=\"example-additional-selection\">\n                    (+{{selectedResultFilter.value.length - 1}} {{selectedResultFilter.value?.length === 2 ? 'otro' : 'otros'}})\n                  </span>\n                </mat-select-trigger>\n                <mat-option *ngFor=\"let resultFilter of resultFilters\" [value]=\"resultFilter\">{{resultFilter}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <button [disabled] = \"!selectedFilterValue\" mat-button class=\"buttonPrimary\" (click)=\"filterStudies()\"> Aplicar filtros </button>\n  \n\n          </mat-card>\n          \n        </section>\n        <!--<mat-form-field>\n          <mat-label>Buscar</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar\">\n      </mat-form-field> -->\n      <button mat-button class=\"buttonPrimary\" (click)=\"newAnalysis()\"> Cargar Análisis </button>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n      \n         \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"Nombre\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n          </ng-container>\n           <!-- Country Column -->\n           <ng-container matColumnDef=\"Pais\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Pais </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.country}}</td>\n          </ng-container>\n           <!-- Result Column -->\n           <ng-container matColumnDef=\"Resultado\">\n            <th  mat-header-cell *matHeaderCellDef mat-sort-header> Resultado </th>\n            <td mat-cell *matCellDef=\"let row\"><span [innerHtml]= \"row.result | resultToStringPipe\" [ngStyle]=\"{'color': row.result == 0 ? 'green' : row.result == 1 ? 'red' : 'blue' }\"> </span></td>\n          </ng-container>\n          <ng-container matColumnDef=\"Detalle\">\n            <th mat-header-cell *matHeaderCellDef> Detalle </th>\n            <td mat-cell *matCellDef=\"let row\"> \n              <button mat-icon-button (click)=\"detailPage(row)\" color=\"primary\" matTooltip=\"Detalle estudio\"  matTooltipPosition=\"right\" aria-label=\"Detalle\">\n                <mat-icon>info</mat-icon>\n              </button>\n              \n            </td>\n          </ng-container>\n  \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n          </tr>\n        </table>\n       <!--  <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>-->\n        \n      </div>\n    </ng-container>\n    <div >\n      <ng-container *ngIf=\"this.loading\">\n        <mat-spinner></mat-spinner>\n      </ng-container>\n    </div>  \n  </div>\n    ","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  mobileQuery: MediaQueryList;\n\n  //fillerNav = Array.from({length: 50}, (_, i) => `Nav Item ${i + 1}`);\n\n  fillerNav = [\n    {name: \"Usuarios\", route:\"usuarios\", icon:\"assignment_ind\"},\n    {name: \"Equipos\", route: \"equipos\", icon:\"devices_other\"}\n    //{name: \"Inicio\", route:\"\", icon:\"home\"}\n  ]\n\n  private _mobileQueryListener: () => void;\n  \n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef, \n    media: MediaMatcher,\n    private routerService: Router\n    ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnInit() {\n    \n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n\n  shouldRun = true;\n\n}\n","<div class=\"example-container\" [class.example-is-mobile]=\"mobileQuery.matches\" *ngIf=\"shouldRun\">\n    <mat-toolbar color=\"primary\" class=\"example-toolbar\">\n      <h1 class=\"example-app-name\">Meli covid</h1>\n\n      <span class=\"fill-remaining-space\"></span>\n      </mat-toolbar>\n  \n    <mat-sidenav-container class=\"example-sidenav-container\"\n                           [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\">\n      <mat-sidenav [ngClass]=\"mobileQuery.matches ? '' : 'sidenav10p'\" #snav  \n                   [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n                   [fixedInViewport]=\"mobileQuery.matches\" fixedTopGap=\"56\" class=\"sideNavMenu\">\n        <mat-nav-list>\n          <a mat-list-item [routerLink]=\"nav.route\" *ngFor=\"let nav of fillerNav\" class=\"linkSideNav\">\n            <mat-icon class=\"icono\">{{nav.icon}}</mat-icon>\n              {{nav.name}}\n            </a>\n        </mat-nav-list>\n      </mat-sidenav>\n  \n      <mat-sidenav-content>\n        <router-outlet></router-outlet>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StudyService } from 'src/app/servicios/estudio.service';\nimport { Router } from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-nuevo-estudio',\n  templateUrl: './nuevo-estudio.component.html',\n  styleUrls: ['./nuevo-estudio.component.css']\n})\nexport class NewStudyComponent implements OnInit {\n\n  constructor(\n    private studyService: StudyService,\n    private routerService: Router,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n  dnaAllowed = [\"C\",\"T\",\"G\",\"A\",\"\\n\"];\n  \n\n  newStudyForm = new FormGroup({\n    name: new FormControl('', Validators.required),\n    country: new FormControl('', Validators.required),\n    dna: new FormControl('', Validators.required)\n\n  });\n\n  dnaTextChanged(){\n   //var formatAdn = this.getFormattedAdn(this.newStudyForm.controls.adn.value);\n   Array.from(this.newStudyForm.controls.dna.value).forEach((element : string) => {\n      if(!this.dnaAllowed.includes(element.toUpperCase())){\n        this.newStudyForm.patchValue({\n            dna : this.newStudyForm.controls.dna.value.replaceAll(element,\"\")\n          })\n      }\n\n   });\n   \n   \n  }\n \n  cancel(){\n    this.routerService.navigate([\"/lista-analisis\"]);\n\n   }\n   \n  /**\n   * @param dna string de NxN posiciones, previamente validado\n   */\n  \n  validateDna(dnaArray){\n    var valida = true;\n    if(!dnaArray || dnaArray.length == 0){\n      valida = false;\n    }\n    else{\n      dnaArray.forEach(element => {\n          if(element.length != dnaArray.length){\n            valida = false;\n          }\n      });\n    }\n    return valida;\n\n  }\n  newStudyClick(){\n    var dna = this.newStudyForm.controls.dna.value.trim().split(\"\\n\")\n    if(!this.validateDna(dna)){\n      let snackBarRef = this._snackBar.open('El dna no tiene el formato NxN',\"Ok\");\n    }\n    else{\n      var study =  {\n        name :this.newStudyForm.controls.name.value,\n        country : this.newStudyForm.controls.country.value,\n        dna : dna\n      }\n      this.studyService.insertStudy(study).subscribe(\n        data => {\n          let snackBarRef = this._snackBar.open('Caso cargado',\"Ok\");\n          this.routerService.navigate([\"/lista-analisis\"]);\n  \n        },\n        err => {\n          console.log(err);\n          let snackBarRef = this._snackBar.open('Ups, ocurrio un error inesperado',\"Ok\");\n\n          \n        }\n      )\n    }  \n\n\n    \n\n  }\n\n}\n\n","<mat-card>\n    <mat-card-title>Nuevo Análisis</mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"newStudyForm\" (ngSubmit)=\"newStudyClick()\">\n            <p>\n                <mat-form-field>\n                    <input type=\"text\" matInput placeholder=\"Nombre\" formControlName=\"name\"> \n                </mat-form-field>\n            </p>\n            <p>\n                <mat-form-field>\n                    <input matInput placeholder=\"País\" formControlName=\"country\"> \n                </mat-form-field>\n            </p>\n            <p>\n                <mat-form-field>\n                    <textarea id=\"dna\" name=\"dna\" class=\"dnaHeight\" (input)=\"dnaTextChanged()\" matInput placeholder=\"Adn\" formControlName=\"dna\" > </textarea>\n                </mat-form-field>\n            </p>\n            <div class=\"displayFlex\">\n                <button type=\"submit\" mat-raised-button class=\"buttonPrimary margin5\"  > \n                    Crear\n                </button>\n                <button type=\"submit\" mat-raised-button (click)=\"cancel()\" >\n                    Cancelar\n                </button>\n            </div>\n            \n        </form>\n    </mat-card-content>\n</mat-card>","import {Injectable, Inject} from '@angular/core';\n\n@Injectable()\nexport class Globals{\n    UsuarioLogueado: boolean = false;\n    public static API_ENDPOINT = 'https://api-meli-covid.rj.r.appspot.com/'; // server\n\n    //public static API_ENDPOINT = 'http://localhost:7080/'; //local server\n    \n    public static GET_POST_STUDY = 'covid/checks';\n\n    public static GET_SEARCH_STUDY = 'covid/checks/search?key=#key&values=#values';\n    public static GET_STATS = 'covid/stats';\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'resultToStringPipe'\r\n})\r\nexport class ResultToStringPipe implements PipeTransform {\r\n\r\n  transform(resultado: Number) {\r\n    var respuesta = \"\";\r\n    var colorClass = \"\";\r\n\r\n    switch(resultado){\r\n      case 0:\r\n          respuesta = \"Sano\";\r\n      colorClass = 'blueColor';\r\n\r\n        break;\r\n        case 1:\r\n          respuesta = \"Infectado\"\r\n          colorClass = 'blueColor';\r\n\r\n        break;\r\n        case 2:\r\n          respuesta = \"Inmune\"\r\n          colorClass = 'blueColor';\r\n\r\n          break;\r\n    }\r\n    var retorno = '<span>'+ respuesta +'</span> ';\r\n    return retorno;\r\n    \r\n   \r\n   }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { estudioInterface } from '../modelos/estudio.interface';\r\nimport { statsInterface } from '../modelos/stats.interface';\r\n\r\nimport { CustomHttpClient } from './http-client.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Globals } from '../global/globals';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudyService {\r\n\r\n  public static detailStudy: any;\r\n\r\n  constructor(        \r\n        private http: CustomHttpClient,\r\n  ) {\r\n   }\r\n\r\n   insertStudy(study): Observable<estudioInterface>{\r\n\r\n    let body = study;\r\n    return this.http.post(Globals.API_ENDPOINT + Globals.GET_POST_STUDY,body,null).pipe(\r\n                map(data => {\r\n                    if (data) {\r\n                        let anyData = data as estudioInterface;\r\n                        return anyData;\r\n                    }\r\n                    })\r\n\r\n            );\r\n    \r\n   }\r\n   getStudies(): Observable<estudioInterface[]>{\r\n    return this.http.get(Globals.API_ENDPOINT + Globals.GET_POST_STUDY,false,null).pipe(\r\n                map(data => {\r\n                    if (data) {\r\n                        let studies = data[\"results\"] as estudioInterface[];\r\n                        return studies;\r\n                    }\r\n                    })\r\n\r\n            );\r\n    \r\n   }\r\n   getFilteredStudies(key,values): Observable<estudioInterface[]>{\r\n\r\n    var url = Globals.API_ENDPOINT + Globals.GET_SEARCH_STUDY.replace(\"#key\",key).replace(\"#values\",values);\r\n    return this.http.get(url,false,null).pipe(\r\n                map(data => {\r\n                    if (data) {\r\n                        let studies = data[\"results\"] as estudioInterface[];\r\n                        return studies;\r\n                    }\r\n                    })\r\n\r\n            );\r\n    \r\n   }\r\n   getStats(): Observable<statsInterface>{\r\n    return this.http.get(Globals.API_ENDPOINT + Globals.GET_STATS,false,null).pipe(\r\n                map(data => {\r\n                    if (data) {\r\n                        let stats = data as statsInterface;\r\n                        return stats;\r\n                    }\r\n                    })\r\n\r\n            );\r\n    \r\n   }\r\n\r\n   \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class CustomHttpClient {\r\n\r\n    constructor(private http: HttpClient, private _router: Router) { }\r\n\r\n    createAuthorizationHeader(headers: Headers, needsAuthorization: boolean) {\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n\r\n    }\r\n\r\n    addCustomHeaders(headers: Headers, customHeaders: any) {\r\n        if (customHeaders) {\r\n            for (var prop in customHeaders) {\r\n                headers.append(prop, customHeaders[prop]);\r\n            }\r\n        }\r\n    }\r\n\r\n    get(url, needsAuthorization: boolean, customHeaders?: any) {\r\n        let headers = new Headers();\r\n        this.createAuthorizationHeader(headers, needsAuthorization);\r\n        this.addCustomHeaders(headers, customHeaders);\r\n        return this.http.get(url, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n              })\r\n        });\r\n    }\r\n  \r\n    post(url, data, needsAuthorization: boolean, customHeaders?: any) {\r\n        let headers = new Headers();\r\n        this.createAuthorizationHeader(headers, needsAuthorization);\r\n        this.addCustomHeaders(headers, customHeaders);\r\n        return this.http.post(url, data, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n              })\r\n        })\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}